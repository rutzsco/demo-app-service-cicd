parameters: 
- name: stageName
  default: ''
- name: environment
  default: ''
- name: azureSubscription
  default: ''
- name: resourceGroupName
  default: ''
- name: region
  default: ''
- name: appName
  default: ''
- name: buildNumber
  default: ''
- name: containerVersion
  default: ''
- name: dockerRegistryPassword
  default: ''
- name: dockerRegistryUsername
  default: ''

stages:
  - stage: ${{ parameters.stageName }}
    displayName: ${{ parameters.stageName }}

    jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: ${{ parameters.environment }}
      pool:
        vmImage: 'ubuntu-latest'
  
      strategy:
        runOnce:
          deploy:
  
            steps:
            
            - task: AzureResourceGroupDeployment@2
              displayName: '1. Create App Service'
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                resourceGroupName: ${{ parameters.resourceGroupName }}
                location: ${{ parameters.region }}
                csmFile: '$(Pipeline.Workspace)/build/Infrastructure/appservice-web-app-slots-linux-v2.json'
                overrideParameters: '-appName ${{ parameters.appName }} -sku standard -skuCode S1 -linuxFxVersion TBD -dockerRegistryPassword TBD'
                deploymentOutputs: ResourceGroupDeploymentOutputs

            - task: AzureWebAppContainer@1
              displayName: '2. Deploy to Stage Slot'
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                appName: ${{ parameters.appName }}
                deployToSlotOrASE: true
                resourceGroupName: ${{ parameters.resourceGroupName }}
                slotName: staging
                containers: ${{ parameters.containerVersion }}
                appSettings: '-APPLICATION_VERSION ${{ parameters.buildNumber }} -DOCKER_REGISTRY_SERVER_URL https://rutzscocr.azurecr.io -DOCKER_REGISTRY_SERVER_USERNAME ${{ parameters.dockerRegistryUsername }} -DOCKER_REGISTRY_SERVER_PASSWORD ${{ parameters.dockerRegistryPassword }}'
            
          routeTraffic:
          delay: 60s
          steps:
          - task: AzureAppServiceManage@0
            displayName: '3. Swap Slots'
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              WebAppName: ${{ parameters.appName }}
              ResourceGroupName: ${{ parameters.resourceGroupName }}
              SourceSlot: staging
